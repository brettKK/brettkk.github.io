<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>brettkk</title>
    <link>http://brettkk.github.io/</link>
    <description>Recent content on brettkk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 21 Apr 2025 11:33:56 +0800</lastBuildDate><atom:link href="http://brettkk.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>金融行为与金钱</title>
      <link>http://brettkk.github.io/posts/culture/draft_jinrong/</link>
      <pubDate>Mon, 21 Apr 2025 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/culture/draft_jinrong/</guid>
      <description>美元霸权与加关税 🔗 美元霸权体系如何形成的 全球关税乱战 本国货币</description>
    </item>
    
    <item>
      <title>AI绘本读物</title>
      <link>http://brettkk.github.io/posts/tools/ai_full_stack/</link>
      <pubDate>Sun, 06 Apr 2025 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/tools/ai_full_stack/</guid>
      <description>讨论记录 🔗 2025 年 4.6 调研范围 文本转语音的模型 （hugging face 上</description>
    </item>
    
    <item>
      <title>前端框架-react</title>
      <link>http://brettkk.github.io/posts/tools/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6-react/</link>
      <pubDate>Wed, 05 Mar 2025 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/tools/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6-react/</guid>
      <description>react 🔗react 是一个 js 的库， 简化 html 和 js 操作 dom 的开发过程。 核心</description>
    </item>
    
    <item>
      <title>全栈框架next.js</title>
      <link>http://brettkk.github.io/posts/tools/next_js/</link>
      <pubDate>Sat, 15 Feb 2025 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/tools/next_js/</guid>
      <description>what next.js is 🔗react: a library for building interactive UIs next.js: is dependent for react. A framework = libs + tools + conventions. next.js</description>
    </item>
    
    <item>
      <title>python</title>
      <link>http://brettkk.github.io/posts/tools/python/</link>
      <pubDate>Thu, 05 Dec 2024 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/tools/python/</guid>
      <description>python 历史 🔗 简单易用。 1989 年荷兰人Guido von Rossum开始写 Python</description>
    </item>
    
    <item>
      <title>git 原理与操作</title>
      <link>http://brettkk.github.io/posts/tools/git/</link>
      <pubDate>Sun, 05 May 2024 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/tools/git/</guid>
      <description>.git 的内部目录结构 🔗Git 是一个内容寻址（content-ad</description>
    </item>
    
    <item>
      <title>从0到1搭建后台服务</title>
      <link>http://brettkk.github.io/posts/tools/web_server/</link>
      <pubDate>Sat, 08 Jul 2023 16:30:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/tools/web_server/</guid>
      <description>环境配置 🔗从 0 到 1 搭建 mysql web 服务: golang，mysql， post</description>
    </item>
    
    <item>
      <title>rust concurrency</title>
      <link>http://brettkk.github.io/posts/rust/rust_concurrency/</link>
      <pubDate>Thu, 05 Jan 2023 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/rust/rust_concurrency/</guid>
      <description>异步编程 🔗 future， async: 定义一个可并发执行的任务； await 触发这</description>
    </item>
    
    <item>
      <title>tidb</title>
      <link>http://brettkk.github.io/posts/store_db/tidb/</link>
      <pubDate>Thu, 05 Jan 2023 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/store_db/tidb/</guid>
      <description>整体架构 🔗 二层（1 sql层无状态，处理用户请求和sql运算逻</description>
    </item>
    
    <item>
      <title>《国史大纲》钱穆</title>
      <link>http://brettkk.github.io/posts/culture/%E5%9B%BD%E5%8F%B2%E5%A4%A7%E7%BA%B2/</link>
      <pubDate>Mon, 05 Dec 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/culture/%E5%9B%BD%E5%8F%B2%E5%A4%A7%E7%BA%B2/</guid>
      <description>魏晋南北朝 🔗隋 🔗唐 🔗五代十国 🔗宋 🔗元 🔗 1206年 成吉思汗统一</description>
    </item>
    
    <item>
      <title>etcd</title>
      <link>http://brettkk.github.io/posts/store_db/etcd/</link>
      <pubDate>Mon, 05 Dec 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/store_db/etcd/</guid>
      <description>etcd使用场景 🔗 共享配置 服务发现 选主 分布式锁 读多写少。 etcd arch</description>
    </item>
    
    <item>
      <title>linux</title>
      <link>http://brettkk.github.io/posts/os/os/</link>
      <pubDate>Mon, 05 Dec 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/os/os/</guid>
      <description>资料 🔗 操作系统：南大 jyy。 http://jyywiki.cn/OS/2022/ Morris MIT 6.S081 上交： 陈海波 https://elixir.bootlin.com/linux/lastest/source 文件系统 🔗</description>
    </item>
    
    <item>
      <title>区块链技术</title>
      <link>http://brettkk.github.io/posts/tools/block_chain/</link>
      <pubDate>Mon, 05 Dec 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/tools/block_chain/</guid>
      <description>区块链技术与应用 🔗肖臻 区块链不可能三角： scalabilit</description>
    </item>
    
    <item>
      <title>读书笔记</title>
      <link>http://brettkk.github.io/posts/culture/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 05 Dec 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/culture/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</guid>
      <description>《生死疲劳》 莫言 🔗生死疲劳，从贪欲起。少贪无为，身心自在。 《</description>
    </item>
    
    <item>
      <title>rust相关的环境问题 &#43; 类型系统疑问</title>
      <link>http://brettkk.github.io/posts/rust/rust_problem/</link>
      <pubDate>Mon, 21 Nov 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/rust/rust_problem/</guid>
      <description>属于名词解释性的文章，知道就是知道，知道是设计者是这么做得而</description>
    </item>
    
    <item>
      <title>rustc</title>
      <link>http://brettkk.github.io/posts/rust/rust%E7%BC%96%E8%AF%91%E5%99%A8/</link>
      <pubDate>Tue, 15 Nov 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/rust/rust%E7%BC%96%E8%AF%91%E5%99%A8/</guid>
      <description>rustc 🔗text -&amp;gt; tokens -&amp;gt; ast -&amp;gt; hir -&amp;gt;mir -&amp;gt; llvm ir -&amp;gt; llvm -&amp;gt; 1110 ThinLTO, PGO 快速看下rust</description>
    </item>
    
    <item>
      <title>异步运行时tokio</title>
      <link>http://brettkk.github.io/posts/rust/rust%E5%BC%82%E6%AD%A5%E8%BF%90%E8%A1%8C%E6%97%B6tokio/</link>
      <pubDate>Tue, 15 Nov 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/rust/rust%E5%BC%82%E6%AD%A5%E8%BF%90%E8%A1%8C%E6%97%B6tokio/</guid>
      <description>tokio 🔗核心是为了提高系统的吞吐量，而非延迟。 基于os的epol</description>
    </item>
    
    <item>
      <title>linux-tcp，http, curl, dns</title>
      <link>http://brettkk.github.io/posts/os/tcp_udp/</link>
      <pubDate>Sat, 05 Nov 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/os/tcp_udp/</guid>
      <description>udp 🔗光速：30万千米/s 中美具体大约：1.5万千米 光纤网络耗</description>
    </item>
    
    <item>
      <title>rust-library-core</title>
      <link>http://brettkk.github.io/posts/rust/rust_library_core/</link>
      <pubDate>Sat, 05 Nov 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/rust/rust_library_core/</guid>
      <description>rust library core 🔗读一下 rust-lang的源码， core正好是不依赖</description>
    </item>
    
    <item>
      <title>rust-library-std</title>
      <link>http://brettkk.github.io/posts/rust/rust_library_std/</link>
      <pubDate>Sat, 05 Nov 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/rust/rust_library_std/</guid>
      <description>HashMap 🔗#[derive(Clone)] pub struct RandomState { k0: u64, k1: u64, } // hashmap 的</description>
    </item>
    
    <item>
      <title>rust语言</title>
      <link>http://brettkk.github.io/posts/rust/rust%E8%AF%AD%E8%A8%80/</link>
      <pubDate>Sat, 05 Nov 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/rust/rust%E8%AF%AD%E8%A8%80/</guid>
      <description>google comprehensive-rust 4days 🔗较短时间4 days入门。 摘要: standard library Option, Result, error handling String Vec HashMap, config hash</description>
    </item>
    
    <item>
      <title>计算机程序 等价于 状态机</title>
      <link>http://brettkk.github.io/posts/os/state_machine/</link>
      <pubDate>Sat, 05 Nov 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/os/state_machine/</guid>
      <description>计算机的本质 🔗软件、程序可以很复杂。但是计算机的本质还是冯诺</description>
    </item>
    
    <item>
      <title>跑步</title>
      <link>http://brettkk.github.io/posts/culture/running/</link>
      <pubDate>Wed, 05 Oct 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/culture/running/</guid>
      <description>Eliud Kipchoge: no human is limited 🔗The Last Milestone: https://www.bilibili.com/video/BV1Ca411n74Z</description>
    </item>
    
    <item>
      <title>前端</title>
      <link>http://brettkk.github.io/posts/tools/%E5%89%8D%E7%AB%AF/</link>
      <pubDate>Mon, 05 Sep 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/tools/%E5%89%8D%E7%AB%AF/</guid>
      <description>html 🔗标签元素的有序集合 css 🔗描述 html 中标签的样式格式。 语法规则：</description>
    </item>
    
    <item>
      <title>module name and module import path in Go</title>
      <link>http://brettkk.github.io/posts/golang/golang%E6%A8%A1%E5%9D%97%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sat, 06 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>http://brettkk.github.io/posts/golang/golang%E6%A8%A1%E5%9D%97%E7%AE%A1%E7%90%86/</guid>
      <description>1. golang管理依赖 🔗 Modules are how Go manages dependencies. 1.1 module and packages 🔗 A module is a collection of packages.</description>
    </item>
    
    <item>
      <title>闭包closure</title>
      <link>http://brettkk.github.io/posts/rust/closure_at_go_c_py_rust/</link>
      <pubDate>Fri, 05 Aug 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/rust/closure_at_go_c_py_rust/</guid>
      <description>what&#39;s closure in PL? 🔗 在函数式编程语言中，宣传函数是一等公民，把函数作为</description>
    </item>
    
    <item>
      <title>golang</title>
      <link>http://brettkk.github.io/posts/golang/golang%E7%89%B9%E8%89%B2/</link>
      <pubDate>Sat, 07 May 2022 18:54:41 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/golang/golang%E7%89%B9%E8%89%B2/</guid>
      <description>资料 🔗 目前 golang 的主要 maintainer 之一: Russ Cox。个人主页：swtch.c</description>
    </item>
    
    <item>
      <title>redis</title>
      <link>http://brettkk.github.io/posts/store_db/redis/</link>
      <pubDate>Thu, 05 May 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/store_db/redis/</guid>
      <description>redis 安装使用 🔗redis 安装 wget https://download.redis.io/releases/redis-6.2.4.tar.gz tar -zvxf redis-6.2.4 mv ~/redis-6.2.4 /usr/local/redis cd /usr/local/redis make 编译 make PREFIX=/usr/local/redis install 安</description>
    </item>
    
    <item>
      <title>vs code 小结</title>
      <link>http://brettkk.github.io/posts/tools/vs_code/</link>
      <pubDate>Thu, 05 May 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/tools/vs_code/</guid>
      <description>1 vscode 快捷键 🔗1.1 工作区快捷键 🔗 Cmd + Shift + P -》显示命令面板 Cmd+P</description>
    </item>
    
    <item>
      <title>软件工具集</title>
      <link>http://brettkk.github.io/posts/tools/pkg_tools/</link>
      <pubDate>Thu, 05 May 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/tools/pkg_tools/</guid>
      <description>画图工具 🔗 draw.io （加载速度慢） xournal （操作不方便） excalidraw （本地 localhost web）</description>
    </item>
    
    <item>
      <title>历史文化：欧州与宗教</title>
      <link>http://brettkk.github.io/posts/culture/euro/</link>
      <pubDate>Tue, 05 Apr 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/culture/euro/</guid>
      <description>犹太教 基督教 新教 （源于马丁路德） 天主教 基督教的宗派之一，罗马</description>
    </item>
    
    <item>
      <title>容器 &amp; k8s</title>
      <link>http://brettkk.github.io/posts/os/dockerk8s/</link>
      <pubDate>Sun, 27 Jun 2021 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/os/dockerk8s/</guid>
      <description>容器 🔗docker 架构，镜像，容器，网络，存储。 容器规范 OC</description>
    </item>
    
    <item>
      <title>加密相关</title>
      <link>http://brettkk.github.io/posts/math/encrypt/</link>
      <pubDate>Thu, 20 May 2021 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/math/encrypt/</guid>
      <description>对称加密与散列 🔗有des, aes 方式， 计算性能好，但密钥的安全依</description>
    </item>
    
    <item>
      <title>纠错码</title>
      <link>http://brettkk.github.io/posts/math/d%E7%BA%A0%E9%94%99%E7%A0%81/</link>
      <pubDate>Thu, 20 May 2021 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/math/d%E7%BA%A0%E9%94%99%E7%A0%81/</guid>
      <description>读心术的小游戏 🔗 信息论 🔗 达到不失真的信源压缩编码的极限（最低</description>
    </item>
    
    <item>
      <title>go同步编码方式</title>
      <link>http://brettkk.github.io/posts/golang/golang%E5%90%8C%E6%AD%A5%E7%BC%96%E7%A0%81%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Thu, 06 May 2021 18:34:48 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/golang/golang%E5%90%8C%E6%AD%A5%E7%BC%96%E7%A0%81%E6%96%B9%E5%BC%8F/</guid>
      <description>go同步方式 🔗 golang提供了比较便捷的协程并发编程方式。</description>
    </item>
    
    <item>
      <title>linux shell 工具命令</title>
      <link>http://brettkk.github.io/posts/os/shell/</link>
      <pubDate>Wed, 05 May 2021 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/os/shell/</guid>
      <description>配置shell文件 🔗 /etc/profile 为系统中每个用户设置环境信息，只在用户</description>
    </item>
    
    <item>
      <title>mac安装开发环境</title>
      <link>http://brettkk.github.io/posts/tools/mac_start_dev/</link>
      <pubDate>Wed, 05 May 2021 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/tools/mac_start_dev/</guid>
      <description>新电脑构建开发环境 🔗 iterm2 brew zsh, ohmyzsh golang, rust vscode hugo github direnv multipass 虚拟机 字体 fira cod</description>
    </item>
    
    <item>
      <title>mysql</title>
      <link>http://brettkk.github.io/posts/store_db/mysql/</link>
      <pubDate>Wed, 05 May 2021 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/store_db/mysql/</guid>
      <description>mysql 起源&amp;amp;基础 🔗 创建表时的存储引擎 🔗 存储引擎-是创建表</description>
    </item>
    
    <item>
      <title>rust unsafe</title>
      <link>http://brettkk.github.io/posts/rust/rust_unsafe/</link>
      <pubDate>Wed, 05 May 2021 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/rust/rust_unsafe/</guid>
      <description>fn main() { let mut d = String::from(&amp;#34;aaaa&amp;#34;); let d_len = d.len(); { // 去掉 or 不去掉 let mut e = String::wtih_capacity(d_len); unsafe { // 两个</description>
    </item>
    
    <item>
      <title>solidity</title>
      <link>http://brettkk.github.io/posts/tools/solidity/</link>
      <pubDate>Wed, 05 May 2021 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/tools/solidity/</guid>
      <description>安装 solidity 的编译器 🔗自动化安装 🔗自定义编译 solidity，安装</description>
    </item>
    
    <item>
      <title>电影对白</title>
      <link>http://brettkk.github.io/posts/francais/common_sense/</link>
      <pubDate>Wed, 05 May 2021 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/francais/common_sense/</guid>
      <description>how i meet your mother 🔗ok, yes, it’s a mistake. I know it’s a mistake. But there are certain things in</description>
    </item>
    
    <item>
      <title>golang bug_fix</title>
      <link>http://brettkk.github.io/posts/golang/golang%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 04 May 2021 19:10:43 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/golang/golang%E9%97%AE%E9%A2%98/</guid>
      <description>可以解决的问题 🔗遇到过的 bug golang 中数组和切片的区别，数组是值类型</description>
    </item>
    
    <item>
      <title>Alphabet Français</title>
      <link>http://brettkk.github.io/posts/francais/fran%C3%A7ais/</link>
      <pubDate>Mon, 03 May 2021 18:34:48 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/francais/fran%C3%A7ais/</guid>
      <description>三板斧：DELF, DALF, TCF, TEF mac下输入快捷键 🔗法语特殊符输入方</description>
    </item>
    
    <item>
      <title>go内存模型</title>
      <link>http://brettkk.github.io/posts/golang/gomemorymodel/</link>
      <pubDate>Mon, 03 May 2021 18:34:48 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/golang/gomemorymodel/</guid>
      <description>内存模型的规定 🔗 go的内存模型规定： 在哪些条件下，一个gol</description>
    </item>
    
    <item>
      <title>golang compiler</title>
      <link>http://brettkk.github.io/posts/golang/golang%E7%BC%96%E8%AF%91%E5%99%A8/</link>
      <pubDate>Sat, 01 May 2021 18:54:41 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/golang/golang%E7%BC%96%E8%AF%91%E5%99%A8/</guid>
      <description>实际编译器 🔗编译器入口： src/cmd/compile/internal/gc/main.go#Main cmd/compile/internal/syntax 词法和语法分析 cmd/compile/internal/gc 类型检查， 处理语</description>
    </item>
    
    <item>
      <title>rb-tree</title>
      <link>http://brettkk.github.io/posts/golang/data_structure/draft_red_black_tree/</link>
      <pubDate>Mon, 05 Apr 2021 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/golang/data_structure/draft_red_black_tree/</guid>
      <description>红黑树的定义 🔗红黑树： 每个节点不是红色就是黑色 根节点（第一个</description>
    </item>
    
    <item>
      <title>中国历史的时间表</title>
      <link>http://brettkk.github.io/posts/culture/chinese_dynasty/</link>
      <pubDate>Mon, 05 Apr 2021 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/culture/chinese_dynasty/</guid>
      <description>历史的编年体 🔗夏商周秦西东汉 三国两晋南北朝 隋唐五代北南宋 下接</description>
    </item>
    
    <item>
      <title>等额本息</title>
      <link>http://brettkk.github.io/posts/math/loan/</link>
      <pubDate>Mon, 05 Apr 2021 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/math/loan/</guid>
      <description>涉及的变量 🔗 本金M 期数N 利率R 等额本息X 公式推导 🔗当N=1时</description>
    </item>
    
    <item>
      <title>java 小结</title>
      <link>http://brettkk.github.io/posts/tools/java/</link>
      <pubDate>Fri, 05 Mar 2021 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/tools/java/</guid>
      <description>java 字节码格式 🔗Class 文件格式图 javap 查看字节码文件 🔗 magic, 0xCAFEBABE ，p</description>
    </item>
    
    <item>
      <title>lsm</title>
      <link>http://brettkk.github.io/posts/store_db/log_structure_tree/</link>
      <pubDate>Wed, 03 Mar 2021 18:34:48 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/store_db/log_structure_tree/</guid>
      <description>lsm 基本想法 🔗 磁盘上的key/value存储, bytes -&amp;gt; bytes, order by key 使用</description>
    </item>
    
    <item>
      <title>代数 algebra</title>
      <link>http://brettkk.github.io/posts/math/algeb/</link>
      <pubDate>Fri, 05 Feb 2021 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/math/algeb/</guid>
      <description>高等代数 🔗3Blue1Brown的系列视频 线性代数的本质 矩阵</description>
    </item>
    
    <item>
      <title>计算复杂度--P, NP, NPC, NP hard</title>
      <link>http://brettkk.github.io/posts/math/%E8%AE%A1%E7%AE%97%E5%A4%8D%E6%9D%82%E5%BA%A6/</link>
      <pubDate>Fri, 18 Sep 2020 09:13:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/math/%E8%AE%A1%E7%AE%97%E5%A4%8D%E6%9D%82%E5%BA%A6/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>http://brettkk.github.io/posts/francais/english/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://brettkk.github.io/posts/francais/english/</guid>
      <description>英文会议即兴问答 🔗给自己争取时间去思考 buy yourself some time 🔗不要一上来就心急火燎的去回答这个问题。先跟问问题的人互动一下。顺便给自己争取点时间去思考。
step1： acknowledge or compliment the question. 夸奖或者确认这个问题。 that is an excellent question, or that is a very important question, or i really like this question.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://brettkk.github.io/posts/golang/data_structure/draft_other/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://brettkk.github.io/posts/golang/data_structure/draft_other/</guid>
      <description>约瑟夫环 🔗 1-N个人，形成一个圈，从编号为1开始报数1，数到M的人x出列，x之后的人再次从1开始喊 直到最后一个人，求这个人的编号
数组 🔗遍历数组，数到m的位置标记为-1， 直到数组中仅剩一个非-1的元素，返回元素的位置
环形链表 🔗不做标记，直接从环形链表中删除。
type Node struct{ int num, next Node, } func createCircleLink(int n) Node{ head := Node{num: 1} cur = head for i := 2; i &amp;lt; n; i++ { tmp := Node{num: i} cur.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://brettkk.github.io/posts/golang/go-ethereum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://brettkk.github.io/posts/golang/go-ethereum/</guid>
      <description>ethdb 包： 对 leveldb 的封装
les 包： 轻量级以太坊客户端
light：
miner 包：
struct 中内嵌 interface。</description>
    </item>
    
    <item>
      <title></title>
      <link>http://brettkk.github.io/posts/math/draft_%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://brettkk.github.io/posts/math/draft_%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</guid>
      <description>数学分析 🔗1 极限，连续 🔗连续的定义 🔗初等函数在定义域内都是连续的。 一般讨论高等函数，如分段函数。
极限的定义 🔗极限的求法 🔗无穷小 $$ lim $$
，无穷大
洛必达法则求极限
2 导数（微商），微分 🔗导数叫微商，是极限。
导数的定义。 🔗导数的几何意义。 🔗斜率
求导的方法 🔗复合函数的求导
隐函数的求导。
导数的应用 🔗单调性，求极值，凹凸性（二阶导数）
3 不定积分，定积分 🔗不定积分 🔗不定积分： 求函数f的全部原函数。</description>
    </item>
    
    <item>
      <title></title>
      <link>http://brettkk.github.io/posts/rust/startup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://brettkk.github.io/posts/rust/startup/</guid>
      <description>标准库 🔗字符在计算机内部时如何表示的？ Unicode兼容了ASCII包含全世界的所有字符，常用UTF-8编码，变长1到4个字节。
字符类型char占4个字节。 rust中字符是unicode编码占4个字节。
std::mem::size_of_val(&amp;amp;&amp;#39;中&amp;#39;） // 4 std::mem::size_of_val(&amp;#34;中&amp;#34;.to_string().as_str()) // 3 。 let a_len = std::mem::size_of_val(&amp;#34;中&amp;#34;); println!(&amp;#34;a_len={:?}&amp;#34;, a_len); // 3 字符串不能想数组那样的索引访问？ 第i个字符 vs 第i个字节 for c in &amp;quot;1234&amp;quot;.chars() {...} vs for c in &amp;quot;1234&amp;quot;.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://brettkk.github.io/posts/store_db/ipfs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://brettkk.github.io/posts/store_db/ipfs/</guid>
      <description>ipfs 🔗去中心化的文件系统。
怎么存（Merkle DAG, IPLD），
Blob 对象 存小文件{&amp;quot;data&amp;quot;: &amp;quot;hello&amp;quot;}, List 对象 存大文件 {&amp;quot;data&amp;quot;: [&amp;quot;blob&amp;quot;, &amp;quot;list&amp;quot;], &amp;quot;links&amp;quot;: [{&amp;quot;hash&amp;quot;: &amp;quot;d&amp;quot;, size: 23}, {}]}
tree 对象 代表一个目录。
commit 对象 代表根文件夹的 hash 快照， 版本控制。</description>
    </item>
    
    <item>
      <title></title>
      <link>http://brettkk.github.io/posts/store_db/kafka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://brettkk.github.io/posts/store_db/kafka/</guid>
      <description>系统解耦。
流量控制。
什么时候会丢消息？ 发送方发送ID &amp;amp; kafka之间的确认ID 接受方的确认
消息的积压？ 扩大partition， consumer。****</description>
    </item>
    
    <item>
      <title></title>
      <link>http://brettkk.github.io/posts/store_db/minio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://brettkk.github.io/posts/store_db/minio/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>http://brettkk.github.io/posts/todo_list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://brettkk.github.io/posts/todo_list/</guid>
      <description>个体的行不通与行得通 🔗自己创建作品，下面的东西行不通：
刷题。 刷到极限就是去卖课，如代码随想录。 数据库存储。 tp数据库的存储结构比较稳定，不容易创新。只能去卷ap，htap，云原生等外围生态领域。个人不能发挥决定性的作用。 云原生方面。 主要是做运维服务容器的平台，大公司在使用，小公司或者个人不使用对业务也没有影响。 重度AI训练。 数字造梦， 生成式AI、大模型需要大数据和gpu集群，成本高，对普通个人的机会几乎为0。普通人很难用chatGPT来赚钱，基本上是当韭菜被收割了，也不可能做出chatGPT, 需要上万块的GPU。 要了几天饱饭就不记得西北风啥味了
自己创建作品，下面的东西可能行得通：
视频、教程。 游戏。 godot轻量游戏引擎，开发2D游戏。godot + rust 游戏。 轻度AI训练（某个细分垂直领域的chatGPT）,web等 + rust + typescript + html + css + react。 计算机软件 = 存储（tidb，tikv，rocksdb）， 计算（zero knoledge）， 网络（tokio） 工作内容相关方面：</description>
    </item>
    
  </channel>
</rss>
